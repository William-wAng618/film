<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.william.film.mapper.ScheduleMapper">
  <resultMap id="BaseResultMap" type="com.william.film.pojo.Schedule">
    <id column="Schedule_Id" jdbcType="INTEGER" property="scheduleId" />
    <result column="Movie_Id" jdbcType="INTEGER" property="movieId" />
    <result column="Hall_Id" jdbcType="INTEGER" property="hallId" />
    <result column="Schedule_Price" jdbcType="INTEGER" property="schedulePrice" />
    <result column="Schedule_Begin_Date_Time" jdbcType="TIMESTAMP" property="scheduleBeginDateTime" />
    <result column="Schedule_End_Date_Time" jdbcType="TIMESTAMP" property="scheduleEndDateTime" />
    <result column="Schedule_Holiday" jdbcType="INTEGER" property="scheduleHoliday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Schedule_Id, Movie_Id, Hall_Id, Schedule_Price, Schedule_Begin_Date_Time, Schedule_End_Date_Time, 
    Schedule_Holiday
  </sql>
  <select id="selectByExample" parameterType="com.william.film.pojo.ScheduleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from schedule
    where Schedule_Id = #{scheduleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from schedule
    where Schedule_Id = #{scheduleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.william.film.pojo.ScheduleExample">
    delete from schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.william.film.pojo.Schedule">
    insert into schedule (Schedule_Id, Movie_Id, Hall_Id, 
      Schedule_Price, Schedule_Begin_Date_Time, 
      Schedule_End_Date_Time, Schedule_Holiday)
    values (#{scheduleId,jdbcType=INTEGER}, #{movieId,jdbcType=INTEGER}, #{hallId,jdbcType=INTEGER}, 
      #{schedulePrice,jdbcType=INTEGER}, #{scheduleBeginDateTime,jdbcType=TIMESTAMP}, 
      #{scheduleEndDateTime,jdbcType=TIMESTAMP}, #{scheduleHoliday,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.william.film.pojo.Schedule">
    insert into schedule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="scheduleId != null">
        Schedule_Id,
      </if>
      <if test="movieId != null">
        Movie_Id,
      </if>
      <if test="hallId != null">
        Hall_Id,
      </if>
      <if test="schedulePrice != null">
        Schedule_Price,
      </if>
      <if test="scheduleBeginDateTime != null">
        Schedule_Begin_Date_Time,
      </if>
      <if test="scheduleEndDateTime != null">
        Schedule_End_Date_Time,
      </if>
      <if test="scheduleHoliday != null">
        Schedule_Holiday,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="scheduleId != null">
        #{scheduleId,jdbcType=INTEGER},
      </if>
      <if test="movieId != null">
        #{movieId,jdbcType=INTEGER},
      </if>
      <if test="hallId != null">
        #{hallId,jdbcType=INTEGER},
      </if>
      <if test="schedulePrice != null">
        #{schedulePrice,jdbcType=INTEGER},
      </if>
      <if test="scheduleBeginDateTime != null">
        #{scheduleBeginDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="scheduleEndDateTime != null">
        #{scheduleEndDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="scheduleHoliday != null">
        #{scheduleHoliday,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.william.film.pojo.ScheduleExample" resultType="java.lang.Long">
    select count(*) from schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update schedule
    <set>
      <if test="record.scheduleId != null">
        Schedule_Id = #{record.scheduleId,jdbcType=INTEGER},
      </if>
      <if test="record.movieId != null">
        Movie_Id = #{record.movieId,jdbcType=INTEGER},
      </if>
      <if test="record.hallId != null">
        Hall_Id = #{record.hallId,jdbcType=INTEGER},
      </if>
      <if test="record.schedulePrice != null">
        Schedule_Price = #{record.schedulePrice,jdbcType=INTEGER},
      </if>
      <if test="record.scheduleBeginDateTime != null">
        Schedule_Begin_Date_Time = #{record.scheduleBeginDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.scheduleEndDateTime != null">
        Schedule_End_Date_Time = #{record.scheduleEndDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.scheduleHoliday != null">
        Schedule_Holiday = #{record.scheduleHoliday,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update schedule
    set Schedule_Id = #{record.scheduleId,jdbcType=INTEGER},
      Movie_Id = #{record.movieId,jdbcType=INTEGER},
      Hall_Id = #{record.hallId,jdbcType=INTEGER},
      Schedule_Price = #{record.schedulePrice,jdbcType=INTEGER},
      Schedule_Begin_Date_Time = #{record.scheduleBeginDateTime,jdbcType=TIMESTAMP},
      Schedule_End_Date_Time = #{record.scheduleEndDateTime,jdbcType=TIMESTAMP},
      Schedule_Holiday = #{record.scheduleHoliday,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.william.film.pojo.Schedule">
    update schedule
    <set>
      <if test="movieId != null">
        Movie_Id = #{movieId,jdbcType=INTEGER},
      </if>
      <if test="hallId != null">
        Hall_Id = #{hallId,jdbcType=INTEGER},
      </if>
      <if test="schedulePrice != null">
        Schedule_Price = #{schedulePrice,jdbcType=INTEGER},
      </if>
      <if test="scheduleBeginDateTime != null">
        Schedule_Begin_Date_Time = #{scheduleBeginDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="scheduleEndDateTime != null">
        Schedule_End_Date_Time = #{scheduleEndDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="scheduleHoliday != null">
        Schedule_Holiday = #{scheduleHoliday,jdbcType=INTEGER},
      </if>
    </set>
    where Schedule_Id = #{scheduleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.william.film.pojo.Schedule">
    update schedule
    set Movie_Id = #{movieId,jdbcType=INTEGER},
      Hall_Id = #{hallId,jdbcType=INTEGER},
      Schedule_Price = #{schedulePrice,jdbcType=INTEGER},
      Schedule_Begin_Date_Time = #{scheduleBeginDateTime,jdbcType=TIMESTAMP},
      Schedule_End_Date_Time = #{scheduleEndDateTime,jdbcType=TIMESTAMP},
      Schedule_Holiday = #{scheduleHoliday,jdbcType=INTEGER}
    where Schedule_Id = #{scheduleId,jdbcType=INTEGER}
  </update>
</mapper>